name: 'Deploy to staging (Vercel)'

on:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  STAGING_HOST: test-vercel-org-stage.vercel.app/

jobs:
  frontend-build-and-deploy:
    name: 'Deploy (staging)'
    runs-on: ubuntu-latest

    environment:
      name: 'staging'
      url: https://${{ env.STAGING_HOST }}

    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      VERCEL_SCOPE: 1212evgen

    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4

      - name: 'Setup Node.js v20'
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: 'Install Vercel CLI'
        run: npm install --global vercel@33.2

      - name: 'Pull Vercel Environment Information'
        run: vercel pull --environment=preview --yes --token=${{ secrets.VERCEL_TOKEN }} --scope=${{ env.VERCEL_SCOPE }}

      - name: 'Build project artifacts'
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }} --scope=${{ env.VERCEL_SCOPE }}

      - name: 'Deploy project artifacts to Vercel'
        id: 'vercel-deploy'
        run: |
          deploymentUrl=$(vercel deploy --prebuilt --skip-domain --archive=tgz --token=${{ secrets.VERCEL_TOKEN }} --scope=${{ env.VERCEL_SCOPE }})
          echo "deployment-url=$deploymentUrl" >> $GITHUB_OUTPUT

      - name: 'Assign domains'
        run: vercel alias set ${{ steps.vercel-deploy.outputs.deployment-url }} ${{ env.STAGING_HOST }} --token=${{ secrets.VERCEL_TOKEN }} --scope=${{ env.VERCEL_SCOPE }}
