name: 'Release a new version'

on:
  workflow_dispatch:

jobs:
  release:
    name: 'Create GitHub Release'
    runs-on: ubuntu-latest

    environment:
      name: 'production'

    permissions: write-all

    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      VERCEL_SCOPE: 1212evgen

    steps:
    - name: 'Checkout'
      uses: actions/checkout@v4

    - name: 'Setup Node.js v20'
      uses: actions/setup-node@v4
      with:
        node-version: 20

    - name: 'Install dependencies'
      run: npm install --global vercel@33 semantic-release@22 @semantic-release/git@10 @semantic-release/changelog@6 @semantic-release/exec@6

    - name: 'Pull Vercel project settings'
      run: vercel pull --environment=production --yes --token=${{ secrets.VERCEL_TOKEN }} --scope=${{ env.VERCEL_SCOPE }}

    - name: 'Build project artifacts'
      run: |
        vercel build --prod --token=${{ secrets.VERCEL_TOKEN }} --scope=${{ env.VERCEL_SCOPE }}
        (cd .vercel/output && zip ../../build.zip . -r)

    - name: 'Generate `semantic-release` config'
      run: |
        cat <<EOF | tee .releaserc
        {
          "branches": [
            "+([0-9]).+([0-9]).+([0-9])",
            "main"
          ],
          "plugins": [
            "@semantic-release/commit-analyzer",
            "@semantic-release/release-notes-generator",
            "@semantic-release/changelog",
            "@semantic-release/npm",
            "@semantic-release/git",
            ["@semantic-release/github", {
              "assets": [
                { "path": "build.zip", "label": "Build (zip)" }
              ]
            }],
            ["@semantic-release/exec", {
              "successCmd": "echo \${ nextRelease.version } > version.txt"
            }]
          ]
        }
        EOF

    - name: 'Release'
      run: npx semantic-release --debug
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GIT_AUTHOR_NAME: "12evgen-bot"
        GIT_AUTHOR_EMAIL: "12evgen@mail.ru"
        GIT_COMMITTER_NAME: "12evgen-bot"
        GIT_COMMITTER_EMAIL: "12evgen@mail.ru"

    - name: 'Validate release'
      shell: bash
      run: >
        if [[ ! -f version.txt ]]; then
          echo "version.txt was not created, release aborted" 1>&2;
          exit 1;
        fi
